---
description: Tutorial writing rules for content/tutorials
globs:
  - content/tutorials/**
alwaysApply: false
---

## Tutorial writing guidelines

1. **Always link to the Knock docs when possible**:

   - Any time you first reference a Knock API, a Knock concept, or any other concept that lives in the Knock documentation (https://docs.knock.app), link to it so the reader can learn more about the concept you're referencing. ALWAYS DOUBLE CHECK YOUR LINKS AND MAKE SURE THEY DO NOT 404.

2. **Use of notes and asides**:

   - Use asides to highlight important notes or in-development features. Clearly label these sections with icons or labels like "ðŸš§ **Note**".

3. **Consistent terminology**:

   - Use consistent terminology for features and processes, such as "incoming replies URL" and "outbound webhook".

4. **Configuration instructions**:

   - Provide clear, step-by-step instructions for configuration tasks, including where to find necessary settings in the UI.

5. **Payload structure**:

   - When describing data structures, use tables to define properties, types, and descriptions for clarity.

6. **Examples**:

   - Include example payloads or code snippets to illustrate how features work in practice.

7. **Debugging and troubleshooting**:

   - Provide sections for debugging and troubleshooting, explaining where to find logs and how to interpret them.

8. **FAQs**:

   - Include a frequently asked questions section to address common concerns or limitations.

9. **Limitations and future features**:

   - Clearly state current limitations and potential future enhancements to manage user expectations.

10. **Language and tone**:

    - Use a professional and informative tone, avoiding adverbs and exclamation marks as per the existing style guide.

11. **American English**:

    - Ensure all spelling follows American English conventions.

12. **Sentence case**:

    - Use sentence case for all headings, except for proper nouns.

13. **Educate the user. Explain why, not just how.**

    - When introducing Knock concepts, make a point to educate the user about what they're doing. Don't just explain how to use it.

14. **Link validation**:
    - Before finalizing any solution document, verify that all links are working by checking their HTTP status codes. Any links that return 404 or other error status codes should be updated or removed.
    - This includes both Knock documentation links and any external references.
    - Use appropriate tools to check link validity in bulk when multiple links are present.
